// The Vue build version to load with the `import` command
// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
import Vue from "vue";
import App from "./App";
import Mint from "mint-ui";
import "mint-ui/lib/style.css";
import router from "./router";
import VueTouch from "./plugins/touchEvent";
import "./common/index.scss";
import api from "./service/api";
import VWechatAuth from "v-wechat-auth";
import VueScroller from "vue-scroller";
import * as constant from "./configs/constant";
import store from "./store";

Vue.use(VueScroller)
Vue.use(VueTouch)
Vue.use(Mint);
Vue.use(VWechatAuth)
Vue.config.productionTip = false
Vue.prototype.api = api;
Vue.use(require('vue-wechat-title'));
Vue.use(constant);
/* eslint-disable no-new */
//判断是第几次进入
sessionStorage.getItem("isFirst") ? "" : sessionStorage.setItem("isFirst", true);
//监听分享
var currentUrl = window.location.href;
if (window.location.href.indexOf("?url=") != -1) {
  var redirectUrl = currentUrl.split("?url=")[0] + '#' + currentUrl.split("?url=")[1].split("&")[0];
  currentUrl = redirectUrl.replace(/(\/#){2,}/g, "/#");
  location.href = redirectUrl;
} else if (currentUrl.match(/(\/#){2,}/g)) {
  currentUrl = currentUrl.replace(/(\/#){2,}/g, "/#");
  location.href = currentUrl;
} else {
  let getUrlStr = function (name) {
    var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)')
    var r = window.location.search.substr(1).match(reg)
    if (r != null) return unescape(r[2])
    return null
  }

  let code = getUrlStr('code')
  new Vue({
    el: '#app',
    router,
    store,
    template: '<App/>',
    components: {App},
    //初始化实例对象的时候就会执行.
    // onOpen:
    wechatAuth: new VWechatAuth({
      appId: constant.appid,
      scope: 'snsapi_userinfo',
      authorize () {
        api.wechatcodelogin({
          'code': code
        }).then(res => {
          if (res.Data != null) {
            window.localStorage.setItem('userInfo', JSON.stringify(res.Data));
            window.localStorage.setItem('token', JSON.stringify(res.Data.Token));
            sessionStorage.setItem("token", JSON.stringify(res.Data.Token));
            sessionStorage.setItem("userInfo", JSON.stringify(res.Data));
            if (!res.Data.IsRegisted) {
              store.state.isRegisted = false;
            } else {
              store.state.isRegisted = true;
            }
            //更新用户信息的头像信息
            api.getMyHomePage({"UserId": res.Data.UserId}).then(res2 => {
              res.Data.wxHeaderImageUrl = res.Data.UserHeaderImageUrl;
              res.Data.wxNickName = res.Data.Nickname;
              res.Data.UserHeaderImageUrl = res2.Data.AvatarUrl ? res2.Data.AvatarUrl : res.Data.UserHeaderImageUrl;
              res.Data.Nickname = res2.Data.NikeName ? res2.Data.NikeName : res.Data.Nickname;
              window.localStorage.setItem('userInfo', JSON.stringify(res.Data));
              sessionStorage.setItem("userInfo", JSON.stringify(res.Data));
            })
            //需要重新获取用户信息将当前值设为true.
          } else if (store.state.reloadUserInfo) {
            //在获取之后, 无论什么状态都重置为false.
            store.state.reloadUserInfo = false;
            let url = constant.urlhost + window.location.hash;
            let appid = constant.appid;
            let urlpush = encodeURIComponent(url);
            location.href = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appid}&redirect_uri=${urlpush}&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect`
          }
          //无论是否取得用户信息, 都可以进行相应跳转
          sessionStorage.setItem("hasRedirect", true);
          store.state.hasRedirect = true;
          store.state.reloadUserInfo = false;
          var data = (res && res.Data) || {}
          return data
        })
      },
    }),
    beforeCreate() {
      window.wechatAuth = this.$wechatAuth;
      //只要进行过重定向, 就不再获取用户信息
      if (sessionStorage.getItem("hasRedirect") !== "true") {
        //在进行当前页面的刷新操作时, code可能重复, 因此需要重新获取相应信息
        //需要做延迟处理
        setTimeout(() => {
          if (sessionStorage.getItem("hasRedirect") !== "true") {
            store.state.reloadUserInfo = true;
            window.wechatAuth.authorize();
          }
        }, 100)
      }
    },
  })
}
window.alert = function (name) {
  var iframe = document.createElement("IFRAME");
  iframe.style.display = "none";
  iframe.setAttribute("src", 'data:text/plain,');
  document.documentElement.appendChild(iframe);
  window.frames[0].window.alert(name);
  iframe.parentNode.removeChild(iframe);
};
window.confirm = function (message) {
  var iframe = document.createElement("IFRAME");
  iframe.style.display = "none";
  iframe.setAttribute("src", 'data:text/plain,');
  document.documentElement.appendChild(iframe);
  var alertFrame = window.frames[0];
  var result = alertFrame.window.confirm(message);
  iframe.parentNode.removeChild(iframe);
  return result;
};
