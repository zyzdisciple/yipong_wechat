<template>
  <div class="g-window">
    <div class="g-chat-header">将于{{endDateTime}}结束</div>
    <mt-button type="primary" @click="endConsult()" style="font-size: 1.0rem;">结束咨询</mt-button>
    <div class="g-inherit m-article" style="padding-top: 25px;">
      <div class="m-chat-main">
        <chat-list
          type="session"
          :msglist="msglist"
          :userInfos="userInfos"
          :myInfo="myInfo"
          @msgs-loaded="msgsLoaded"
        ></chat-list>
        <chat-editor
          type="session"
          :to="to"
          :scene="scene"
        ></chat-editor>
      </div>
    </div>
  </div>
</template>

<script>
  import ChatEditor from './ChatEditor'
  import ChatList from './ChatList'
  import util from '../../utils'
  import pageUtil from '../../utils/page'

  export default {
    components: {
      ChatEditor,
      ChatList
    },

    // 进入该页面，文档被挂载
    mounted () {
      this.$store.dispatch('showLoading')
      // 此时设置当前会话
      this.$store.dispatch('setCurrSession', this.sessionId)
      pageUtil.scrollChatListDown()
      setTimeout(() => {
        this.$store.dispatch('hideLoading')
      }, 1000)
      this.$nextTick(() => {
        document.documentElement.style.fontSize = "100%";
      })
    },
    updated () {
      pageUtil.scrollChatListDown()
    },
    // 离开该页面，此时重置当前会话
    destroyed () {
      this.$store.dispatch('resetCurrSession');
      document.documentElement.style.fontSize = "62.5%";
    },
    data () {
      return {
        leftBtnOptions: {
          backText: ' ',
          preventGoBack: true,
        }
      }
    },
    computed: {
      sessionId () {
        let sessionId = this.$route.params.sessionId
        return sessionId
      },
      scene () {
        return util.parseSession(this.sessionId).scene
      },
      to () {
        return util.parseSession(this.sessionId).to
      },

      myInfo () {
        return this.$store.state.myInfo
      },
      msglist () {
        let msgs = this.$store.state.currSessionMsgs
        return msgs
      },
      userInfos() {
        return this.$store.state.userInfos;
      },
      endDateTime(){
        return this.$route.params.endDateTime;
      }
    },
    methods: {
      msgsLoaded () {
        pageUtil.scrollChatListDown()
      },
      endConsult() {
        this.api.updateCustomerOnlineConsultState({StateId: 2, Id: this.$route.params.consultId}).then(res => {
            this.$router.go(-1);
        })
      }
    }
  }
</script>
<style scoped>
  @import '../../common/chat/theme.css';

  .g-chat-header {
    background-color: #97CE65;
    width: 100%;
    height: 25px;
    position: fixed;
    top: 0px;
    z-index: 9999;
    color: white;
    line-height: 25px;
    font-size: 0.9rem;
  }

  button {
    width: 100%;
    position: fixed;
    top: 25px;
    z-index: 2;
    left: 0;
    border-radius: inherit;
    height: 35px;
    font-size: 1.1rem;
  }

  .g-window .m-chat-main {
    background-color: #EBEBEB;
  }

  .g-window .m-tab .m-tab-right {
    width: 5rem;
    right: -1rem;
  }

  .m-tab-right {
    display: flex;
    justify-content: flex-end;
  }

  .m-tab-right .icon-history, .icon-team {
    display: inline-block;
    margin-right: .8rem;
    width: 1.7rem;
    height: 1.7rem;
    background: url(http://yx-web.nos.netease.com/webdoc/h5/im/icons.png);
    background-size: 20rem;
    background-position: -5.8rem -11.3rem;
  }

  .m-tab-right .icon-team {
    background-position: -7.9rem -11.3rem;
  }

  .invalidHint {
    width: 100%;
    height: 2rem;
    line-height: 2rem;
    text-align: center;
    background-color: bisque;
    color: burlywood;
  }

  .g-window .vux-header .m-tab-top {
    width: 80%;
    margin: 0 10%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>
