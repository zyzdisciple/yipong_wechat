import api from "../service/api";
import * as constant from "../configs/constant";
import {Toast} from 'mint-ui';
import store from "../store";

wx.error(function (res) {

});

export const getWXPayInfo = (amount, referToNumber, callBack, failCall) => {

  var params = {
    Amount: amount,
    PayType: "JSAPI",
    RefertoNumber: referToNumber,
    payFromType: "1",
  }
  api.getWeChatPayInfo(params).then(res => {
    let data = res.Data;
    let payinfo = {
      "appId": data.AppId,     //公众号名称，由商户传入
      "timeStamp": data.Timestamp + "",  //时间戳，自1970年以来的秒数
      "nonceStr": data.NonceStr, //随机串
      "package": data.Package,
      "signType": data.SignType, //微信签名方式：
      "paySign": data.PaySign //微信签名
    }
    var wxPay = function () {
      WeixinJSBridge.invoke(
        'getBrandWCPayRequest', payinfo,
        function (resPay) {
          if (resPay.err_msg == "get_brand_wcpay_request:ok") {
            callBack()
          } else {
            failCall("fail")
          }     // 使用以上方式判断前端返回,微信团队郑重提示：res.err_msg将在用户支付成功后返回    ok，但并不保证它绝对可靠。
        }
      )
    };

    if (typeof(WeixinJSBridge) == "undefined") {
      if (document.addEventListener) {
        document.addEventListener('WeixinJSBridgeReady', wxPay, false);
      } else if (document.attachEvent) {
        document.attachEvent('WeixinJSBridgeReady', wxPay);
        document.attachEvent('onWeixinJSBridgeReady', wxPay);
      }
    } else {
      wxPay();
    }
  })
}

export const getJSSignature = () => {
  let url = window.location.href.split("#")[0];
  api.getwechatjssignature({url: url}).then((res) => {

    let data = res.Data;
    if (res.ResultMessage != "Success") {
      return;
    }
    wx.config({
      debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
      appId: data.AppId, // 必填，公众号的唯一标识
      timestamp: data.TimesTamp, // 必填，生成签名的时间戳
      nonceStr: data.NonceStr, // 必填，生成签名的随机串
      signature: data.Signature,// 必填，签名，见附录1
      jsApiList: ['chooseWXPay', 'checkJsApi', 'getLocation', 'onMenuShareAppMessage', 'onMenuShareTimeline', 'hideMenuItems', 'showMenuItems'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
    });
    // WXJSPayInfo
  })
}

export const share = (title, description, imgUrl) => {
  //对url做特殊处理.
  //分享之前删除 /?code=..../之间的数据, 否则会跳转至首页, 打开连接变为 /#/#/url
  var strs = window.location.href.split('\/');
  var reg = /\?+.*code=/g;
  var deleteIndex = "";
  var url = "";
  strs.forEach(function (item, index, array) {
    if (item.match(reg) != null) {
      deleteIndex = index;
      url += "?url=/";
    } else {
      if (index < strs.length - 1) {
        url += (item + "/")
      } else {
        url += item;
      }
    }
  });

  if (url.split('#').length > 1) {
    url = url.split('#')[0] + '?url=' + url.split('#')[1];
  }

  wx.onMenuShareAppMessage({
    title: title, // 分享标题
    desc: description ? description : "", // 分享描述
    link: url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
    imgUrl: imgUrl ? imgUrl : constant.staticImgUlr + 'static/img/default_avatar.png', // 分享图标
    type: 'link', // 分享类型,music、video或link，不填默认为link
    dataUrl: '', // 如果type是music或video，则要提供数据链接，默认为空
    success: function () {
      // 用户确认分享后执行的回调函数
    },
    cancel: function () {
      // 用户取消分享后执行的回调函数
    }
  });

  wx.onMenuShareTimeline({
    title: title, // 分享标题
    link: url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
    imgUrl: imgUrl ? imgUrl : constant.staticImgUlr + 'static/img/default_avatar.png', // 分享图标
    success: function () {
      // 用户确认分享后执行的回调函数
    },
  })

}

export const subscribe = (closePage = false) => {
  store.state.payAttention = true;
}
